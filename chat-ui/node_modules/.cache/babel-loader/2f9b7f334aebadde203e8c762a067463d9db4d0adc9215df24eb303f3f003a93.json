{"ast":null,"code":"var _jsxFileName = \"/home/god/pdf-chat-ai/chat-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Input, MessageList } from \"react-chat-elements\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pdfId, setPdfId] = useState(null);\n  const [question, setQuestion] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const uploadPDF = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setPdfId(response.data.pdfId);\n      setChat([...chat, {\n        position: \"left\",\n        type: \"text\",\n        title: \"system\",\n        text: \"PDF uploaded successfully.\"\n      }]);\n    } catch (error) {\n      console.error(\"Error uploading PDF:\", error);\n    }\n  };\n  const askQuestion = async () => {\n    if (!pdfId) {\n      alert(\"Please upload a PDF first.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"/ask\", {\n        question,\n        pdfId\n      });\n      setChat([...chat, {\n        position: \"right\",\n        type: \"text\",\n        title: \"You\",\n        text: question\n      }, {\n        position: \"left\",\n        type: \"text\",\n        title: \"bot\",\n        text: response.data.answer\n      }]);\n      setQuestion(\"\");\n    } catch (error) {\n      console.error(\"Error asking question:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#ededed\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat with PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: uploadPDF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox\",\n        children: [/*#__PURE__*/_jsxDEV(MessageList, {\n          className: \"message-list\",\n          lockable: true,\n          toBottomHeight: \"100MessageList%\",\n          dataSource: chat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            marginTop: \"10px\"\n          },\n          placeholder: \"Type here...\",\n          multiline: true,\n          value: question,\n          onChange: e => setQuestion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          onClick: askQuestion,\n          children: \"Ask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"o/3I425qYlo9PsLhl2EwUKugfAE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Input","MessageList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","pdfId","setPdfId","question","setQuestion","chat","setChat","uploadPDF","e","file","target","files","formData","FormData","append","response","post","headers","data","position","type","title","text","error","console","askQuestion","alert","answer","children","style","backgroundColor","padding","fileName","_jsxFileName","lineNumber","columnNumber","onChange","className","lockable","toBottomHeight","dataSource","marginTop","placeholder","multiline","value","onClick","_c","$RefreshReg$"],"sources":["/home/god/pdf-chat-ai/chat-ui/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Input, MessageList } from \"react-chat-elements\";\n\nfunction App() {\n  const [pdfId, setPdfId] = useState(null);\n  const [question, setQuestion] = useState(\"\");\n  const [chat, setChat] = useState([]);\n\n  const uploadPDF = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const response = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setPdfId(response.data.pdfId);\n      setChat([\n        ...chat,\n        {\n          position: \"left\",\n          type: \"text\",\n          title: \"system\",\n          text: \"PDF uploaded successfully.\",\n        },\n      ]);\n    } catch (error) {\n      console.error(\"Error uploading PDF:\", error);\n    }\n  };\n\n  const askQuestion = async () => {\n    if (!pdfId) {\n      alert(\"Please upload a PDF first.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"/ask\", { question, pdfId });\n      setChat([\n        ...chat,\n        {\n          position: \"right\",\n          type: \"text\",\n          title: \"You\",\n          text: question,\n        },\n        {\n          position: \"left\",\n          type: \"text\",\n          title: \"bot\",\n          text: response.data.answer,\n        },\n      ]);\n      setQuestion(\"\");\n    } catch (error) {\n      console.error(\"Error asking question:\", error);\n    }\n  };\n\n  return (\n    <>\n      <div style={{ backgroundColor: \"#ededed\", padding: \"10px\" }}>\n        <h1>Chat with PDF</h1>\n        <input type=\"file\" onChange={uploadPDF} />\n        <br />\n        <div className=\"chatbox\">\n          <MessageList\n            className=\"message-list\"\n            lockable={true}\n            toBottomHeight={\"100MessageList%\"}\n            dataSource={chat}\n          />\n          <Input\n            style={{ marginTop: \"10px\" }}\n            placeholder=\"Type here...\"\n            multiline={true}\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n          />\n          <button style={{ marginTop: \"10px\" }} onClick={askQuestion}>\n            Ask\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}