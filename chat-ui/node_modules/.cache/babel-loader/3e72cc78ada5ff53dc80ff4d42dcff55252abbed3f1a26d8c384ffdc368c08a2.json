{"ast":null,"code":"var _jsxFileName = \"/home/god/pdf-chat-ai/chat-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Input, MessageList } from \"react-chat-elements\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pdfId, setPdfId] = useState(null);\n  const [question, setQuestion] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const uploadPDF = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setPdfId(response.data.pdfId);\n      setChat([...chat, {\n        role: \"system\",\n        content: \"PDF uploaded successfully.\"\n      }]);\n    } catch (error) {\n      console.error(\"Error uploading PDF:\", error);\n    }\n  };\n  const askQuestion = async () => {\n    if (!pdfId) {\n      alert(\"Please upload a PDF first.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"/ask\", {\n        question,\n        pdfId\n      });\n      setChat([...chat, {\n        position: \"right\",\n        type: \"text\",\n        title: \"You\",\n        text: question\n      }, {\n        position: \"left\",\n        type: \"text\",\n        title: \"bot\",\n        text: response.data.answer\n      }]);\n      setQuestion(\"\");\n    } catch (error) {\n      console.error(\"Error asking question:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#ededed\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat with PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: uploadPDF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        className: \"message-list\",\n        lockable: true,\n        toBottomHeight: \"100MessageList%\",\n        dataSource: chat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"\",\n        placeholder: \"Type here...\",\n        multiline: true,\n        value: question,\n        onChange: e => setQuestion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: askQuestion,\n        children: \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"o/3I425qYlo9PsLhl2EwUKugfAE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Input","MessageList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","pdfId","setPdfId","question","setQuestion","chat","setChat","uploadPDF","e","file","target","files","formData","FormData","append","response","post","headers","data","role","content","error","console","askQuestion","alert","position","type","title","text","answer","children","style","backgroundColor","padding","fileName","_jsxFileName","lineNumber","columnNumber","onChange","className","lockable","toBottomHeight","dataSource","placeholder","multiline","value","onClick","_c","$RefreshReg$"],"sources":["/home/god/pdf-chat-ai/chat-ui/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Input, MessageList } from \"react-chat-elements\";\n\nfunction App() {\n  const [pdfId, setPdfId] = useState(null);\n  const [question, setQuestion] = useState(\"\");\n  const [chat, setChat] = useState([]);\n\n  const uploadPDF = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const response = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setPdfId(response.data.pdfId);\n      setChat([\n        ...chat,\n        { role: \"system\", content: \"PDF uploaded successfully.\" },\n      ]);\n    } catch (error) {\n      console.error(\"Error uploading PDF:\", error);\n    }\n  };\n\n  const askQuestion = async () => {\n    if (!pdfId) {\n      alert(\"Please upload a PDF first.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"/ask\", { question, pdfId });\n      setChat([\n        ...chat,\n        {\n          position: \"right\",\n          type: \"text\",\n          title: \"You\",\n          text: question,\n        },\n        {\n          position: \"left\",\n          type: \"text\",\n          title: \"bot\",\n          text: response.data.answer,\n        },\n      ]);\n      setQuestion(\"\");\n    } catch (error) {\n      console.error(\"Error asking question:\", error);\n    }\n  };\n\n  return (\n    <>\n      <div style={{ backgroundColor: \"#ededed\", padding: \"10px\" }}>\n        <h1>Chat with PDF</h1>\n        <input type=\"file\" onChange={uploadPDF} />\n        <br />\n        <MessageList\n          className=\"message-list\"\n          lockable={true}\n          toBottomHeight={\"100MessageList%\"}\n          dataSource={chat}\n        />\n        <Input\n          className=\"\"\n          placeholder=\"Type here...\"\n          multiline={true}\n          value={question}\n          onChange={(e) => setQuestion(e.target.value)}\n        />\n        <button onClick={askQuestion}>Ask</button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}