{"ast":null,"code":"var _jsxFileName = \"/home/god/pdf-chat-ai/chat-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pdfId, setPdfId] = useState(null);\n  const [question, setQuestion] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const uploadPDF = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setPdfId(response.data.pdfId);\n      setChat([...chat, {\n        role: \"system\",\n        content: \"PDF uploaded successfully.\"\n      }]);\n    } catch (error) {\n      console.error(\"Error uploading PDF:\", error);\n    }\n  };\n  const askQuestion = async () => {\n    if (!pdfId) {\n      alert(\"Please upload a PDF first.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"/ask\", {\n        question,\n        pdfId\n      });\n      setChat([...chat, {\n        role: \"user\",\n        content: question\n      }, {\n        role: \"bot\",\n        content: response.data.answer\n      }]);\n      setQuestion(\"\");\n    } catch (error) {\n      console.error(\"Error asking question:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat with PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: uploadPDF\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"20\",\n      cols: \"100\",\n      readOnly: true,\n      value: chat.map(c => `${c.role === \"user\" ? \"You\" : \"Bot\"}: ${c.content}`).join(\"\\n\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: question,\n      onChange: e => setQuestion(e.target.value),\n      placeholder: \"Ask a question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: askQuestion,\n      children: \"Ask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o/3I425qYlo9PsLhl2EwUKugfAE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","pdfId","setPdfId","question","setQuestion","chat","setChat","uploadPDF","e","file","target","files","formData","FormData","append","response","post","headers","data","role","content","error","console","askQuestion","alert","answer","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","rows","cols","readOnly","value","map","c","join","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/god/pdf-chat-ai/chat-ui/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [pdfId, setPdfId] = useState(null);\n  const [question, setQuestion] = useState(\"\");\n  const [chat, setChat] = useState([]);\n\n  const uploadPDF = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const response = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setPdfId(response.data.pdfId);\n      setChat([\n        ...chat,\n        { role: \"system\", content: \"PDF uploaded successfully.\" },\n      ]);\n    } catch (error) {\n      console.error(\"Error uploading PDF:\", error);\n    }\n  };\n\n  const askQuestion = async () => {\n    if (!pdfId) {\n      alert(\"Please upload a PDF first.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"/ask\", { question, pdfId });\n      setChat([\n        ...chat,\n        { role: \"user\", content: question },\n        { role: \"bot\", content: response.data.answer },\n      ]);\n      setQuestion(\"\");\n    } catch (error) {\n      console.error(\"Error asking question:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Chat with PDF</h1>\n      <input type=\"file\" onChange={uploadPDF} />\n      <br />\n      <textarea\n        rows=\"20\"\n        cols=\"100\"\n        readOnly\n        value={chat\n          .map((c) => `${c.role === \"user\" ? \"You\" : \"Bot\"}: ${c.content}`)\n          .join(\"\\n\")}\n      />\n      <br />\n      <input\n        type=\"text\"\n        value={question}\n        onChange={(e) => setQuestion(e.target.value)}\n        placeholder=\"Ask a question\"\n      />\n      <button onClick={askQuestion}>Ask</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}